---
# tasks file for watchdogpolska.duply

- fail:
    msg: "Value of 'duply__storage' should be in ['s3', 'swift', 'sftp', 'azure']"
  when: duply__storage not in ["s3", "swift", "sftp", "azure"]

- name: Ensure duplicity-team PPA repository used
  apt_repository:
    repo: 'ppa:duplicity-team/ppa'

- name: Ensure duply installed
  apt:
    name: "{{item}}"
    state: "latest"
    cache_valid_time: 3600
  with_items:
    - python-pip
    - duply
    - duplicity

- name: Ensure duply configuration directory exists
  file:
    dest: "{{ item }}"
    state: directory
  with_items:
    - /root/.duply
    - /root/.duply/main

- name: Ensure duply scripts exists
  template:
    src: "{{ item }}.j2"
    dest: /root/.duply/main/{{ item }}
  with_items:
    - exclude
    - pre
    - post

- name: Ensure backup data-dir exist
  file:
    path: '{{ duply__datadir }}'
    state: directory

- name: Ensure MySQL backup data-dir exist
  file:
    dest: '{{ duply__datadir }}/mysql'
    state: directory
  when: duply__mysql_backup

- name: Ensure PostgreSQL backup data-dir exist
  file:
    dest: '{{ duply__datadir }}/postgresql'
    owner: postgres
    group: postgres
    state: directory
  when: duply__postgresql_backup

- include_tasks: 'storage-{{ duply__storage }}.yml'

- name: Ensure duply configuration are valid
  shell: duply main status

- name: Ensure non-exists obsolete cron job
  cron:
    name: "Backup job (see ~/.duply/main/conf)"
    minute: "0"
    hour: "1"
    job: "duply main backup_verify_purge_status --force"
    state: absent

- name: Ensure backup script exists
  template:
    dest: "{{duply__script_location}}"
    mode: u=rx

- name: "Ensure cron job to perform backup exists"
  cron:
    name: "Backup job by duply (see ~/.duply/main/conf for settings)"
    minute: "0"
    hour: "1"
    job: "{{duply__script_location}}"
 

- name: Ensure obsolete backup files removed
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - "/root/backup.sql.gz"
    - "/root/backup.postgres.sql.gz"

- name: Ensure obsolete backup script removed
  file:
    path: "/root/backup.sh"
    state: absent
  when: duply__script_location != '/root/backup.sh'

